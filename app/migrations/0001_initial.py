# Generated by Django 5.2.1 on 2025-05-28 04:33

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('city', models.CharField(max_length=512)),
                ('street', models.CharField(max_length=512)),
                ('building', models.CharField(max_length=512)),
                ('corpus', models.IntegerField()),
                ('flat', models.IntegerField()),
                ('phone_number', models.IntegerField()),
                ('message', models.TextField()),
                ('time', models.CharField(max_length=128)),
                ('is_anonymous', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Data',
                'verbose_name_plural': 'Datas',
            },
        ),
        migrations.CreateModel(
            name='Flower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name': 'Flower',
                'verbose_name_plural': 'Flowers',
            },
        ),
        migrations.CreateModel(
            name='FlowerColour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('image', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name': 'FlowerColour',
                'verbose_name_plural': 'FlowerColours',
            },
        ),
        migrations.CreateModel(
            name='FlowerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('image', models.ImageField(upload_to='')),
            ],
            options={
                'verbose_name': 'FlowerType',
                'verbose_name_plural': 'FlowerTypes',
            },
        ),
        migrations.CreateModel(
            name='ChosenFlower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(choices=[('фуу...', 'фуу...'), ('нее', 'нее'), ('хз', 'хз'), ('норм', 'норм'), ('ваау!!', 'ваау!!')], max_length=56)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.data')),
                ('flower', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chosen_flower', to='app.flower')),
            ],
            options={
                'verbose_name': 'Data',
                'verbose_name_plural': 'Datas',
            },
        ),
        migrations.AddField(
            model_name='flower',
            name='colour',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.flowercolour'),
        ),
        migrations.AddField(
            model_name='data',
            name='flower_colour',
            field=models.ManyToManyField(related_name='chosen_flower_colour', to='app.flowercolour'),
        ),
        migrations.AddField(
            model_name='flower',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.flowertype'),
        ),
        migrations.AddField(
            model_name='data',
            name='flower_type',
            field=models.ManyToManyField(related_name='chosen_flower_types', to='app.flowertype'),
        ),
    ]
